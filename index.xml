<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>雑記</title>
    <link>https://america.github.io/</link>
    <description>Recent content on 雑記</description>
    <generator>Hugo</generator>
    <language>ja</language>
    <lastBuildDate>Tue, 26 Nov 2024 00:56:08 +0900</lastBuildDate>
    <atom:link href="https://america.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Test Post</title>
      <link>https://america.github.io/posts/my-second-post/</link>
      <pubDate>Tue, 26 Nov 2024 00:56:08 +0900</pubDate>
      <guid>https://america.github.io/posts/my-second-post/</guid>
      <description>&lt;div class=&#34;codeblock-wrapper&#34;&gt;&#xA;    &#xA;    &lt;pre&gt;&#xA;        &lt;code id=&#34;codeblock-0&#34; class=&#34;language-bash&#34;&gt;echo &#34;Hello, World!&#34;&lt;/code&gt;&#xA;    &lt;/pre&gt;&#xA;    &lt;button class=&#34;copy-btn&#34; onclick=&#34;copyToClipboard(&#39;codeblock-0&#39;)&#34;&gt;Copy&lt;/button&gt;&#xA;&#xA;    &lt;script&gt;&#xA;        function copyToClipboard(id) {&#xA;            const codeBlock = document.getElementById(id);&#xA;            if (!codeBlock) return;&#xA;&#xA;            const text = codeBlock.textContent.replace(/^\$\s/gm, &#34;&#34;);&#xA;            navigator.clipboard.writeText(text).then(() =&gt; {&#xA;                alert(&#34;Copied!&#34;);&#xA;            }).catch(err =&gt; {&#xA;                console.error(&#34;Failed to copy: &#34;, err);&#xA;            });&#xA;        }&#xA;    &lt;/script&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>First Post</title>
      <link>https://america.github.io/posts/first-post/</link>
      <pubDate>Wed, 20 Nov 2024 23:47:31 +0900</pubDate>
      <guid>https://america.github.io/posts/first-post/</guid>
      <description>&lt;h1 id=&#34;awsでlamp環境を構築したけれど&#34;&gt;AWSでLAMP環境を構築したけれど…&lt;/h1&gt;&#xA;&lt;p&gt;最近、AWS上でLAMP環境を構築し、WordPressを立ち上げました。これ自体は、これまでの経験を活かして比較的スムーズに進めることができました。EC2のインスタンスを用意し、Apacheを設定し、MySQLとPHPを組み合わせて、ようやくWordPressのインストールにこぎつけました。&lt;/p&gt;&#xA;&lt;p&gt;WordPressのダッシュボードを初めて開いたときには、達成感がありました。「これで理想のブログができる」と思ったのです。しかし、その後、運用をイメージし始めたとき、徐々に違和感が生じてきました。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;wordpressで感じた違和感&#34;&gt;WordPressで感じた違和感&lt;/h1&gt;&#xA;&lt;p&gt;WordPressは確かに便利で多機能です。しかし、カスタマイズしようと思うとプラグインの選定やセキュリティ対策に多くの時間を費やす必要があります。そして、定期的なアップデートの管理、MySQLのバックアップ、万が一のトラブル時の復旧作業…これらが少しずつ重くのしかかってきました。&lt;/p&gt;&#xA;&lt;p&gt;ブログ運営は長期戦です。構築そのものに時間をかけすぎるのではなく、記事の執筆や情報発信にもっと時間を使いたい。そう思い始めると、WordPressは少し「重たい」と感じるようになりました。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;静的サイトジェネレーターとの出会い&#34;&gt;静的サイトジェネレーターとの出会い&lt;/h1&gt;&#xA;&lt;p&gt;そんな中で目にしたのが、静的サイトジェネレーターの存在です。特にHugoのシンプルさや高速性には興味を惹かれました。さらに、GitHub Pagesを利用すれば無料でホスティングでき、運用コストを大幅に削減できることに気づいたのです。&lt;/p&gt;&#xA;&lt;p&gt;Hugoで生成される静的サイトは、セキュリティリスクも少なく、更新もGitの操作だけで完結します。「これなら、より気軽にブログを運営できるかもしれない」と思い、試しにローカル環境でHugoを導入してみました。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;github-pages--hugoへの移行を決断&#34;&gt;GitHub Pages + Hugoへの移行を決断&lt;/h1&gt;&#xA;&lt;p&gt;Hugoを使ってサイトを構築してみると、その軽さとスピード感に驚きました。Markdownで記事を書き、コマンド一つでサイトを生成。そして、そのファイルをGitHubにプッシュするだけで公開できる。このシンプルさに感動しました。&lt;/p&gt;&#xA;&lt;p&gt;最初は「WordPressで構築したものを捨てるのはもったいない」と葛藤しました。しかし、将来を見据えたとき、運用の手軽さが何よりも重要だと判断し、GitHub Pages + Hugoに移行することを決断しました。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;結論ブログ運営における最適解とは&#34;&gt;結論：ブログ運営における最適解とは？&lt;/h1&gt;&#xA;&lt;p&gt;AWSでのLAMP環境構築やWordPressの設定は、確かに学びの多い経験でした。しかし、それ以上に「どんな形でブログを運営したいのか」を考える貴重な機会にもなりました。&lt;/p&gt;&#xA;&lt;p&gt;今、私はHugoとGitHub Pagesでブログを運営しています。そのシンプルさと自由度の高さに満足しながら、これから記事を増やしていくつもりです。&lt;/p&gt;&#xA;&lt;p&gt;もし、ブログの運営方法で悩んでいる方がいれば、「自分にとって最適な運用方法は何か？」をぜひ考えてみてください。決して、簡単にたどり着ける答えではありませんが、その過程で得られる学びは大きいものです。&lt;/p&gt;&#xA;&lt;hr&gt;</description>
    </item>
    <item>
      <title>AWSでSSH接続できない問題を解決した話</title>
      <link>https://america.github.io/posts/aws_ssh_issue/</link>
      <pubDate>Wed, 20 Nov 2024 00:00:00 +0000</pubDate>
      <guid>https://america.github.io/posts/aws_ssh_issue/</guid>
      <description>&lt;h2 id=&#34;はじめに&#34;&gt;はじめに&lt;/h2&gt;&#xA;&lt;p&gt;先日、AWSで立てたEC2インスタンスにSSH接続できなくなる問題が発生しました。このトラブルの原因と解決方法を記録しておきます。同じ状況に陥った方の助けになれば幸いです。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;問題の症状&#34;&gt;問題の症状&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;EC2インスタンスにSSH接続を試みると、&lt;code&gt;Connection timed out&lt;/code&gt; のエラーが表示される。&lt;/li&gt;&#xA;&lt;li&gt;AWSコンソール上では、インスタンスは正常に動作中。&lt;/li&gt;&#xA;&lt;li&gt;ブラウザからの接続は可能（インスタンス内のApacheは稼働中）。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;原因と解決方法&#34;&gt;原因と解決方法&lt;/h2&gt;&#xA;&lt;p&gt;調査の結果、以下の4つの原因が考えられました。&lt;/p&gt;&#xA;&lt;h3 id=&#34;原因1-セキュリティグループのルール設定ミス&#34;&gt;&lt;strong&gt;原因1: セキュリティグループのルール設定ミス&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;問題点&lt;/strong&gt;&lt;br&gt;&#xA;セキュリティグループでポート22（SSH）が許可されていなかった。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;解決方法&lt;/strong&gt;&lt;br&gt;&#xA;AWSコンソールのセキュリティグループ設定に以下のルールを追加：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;タイプ: SSH&lt;/li&gt;&#xA;&lt;li&gt;プロトコル: TCP&lt;/li&gt;&#xA;&lt;li&gt;ポート範囲: 22&lt;/li&gt;&#xA;&lt;li&gt;ソース: 自分のグローバルIPアドレス（例: &lt;code&gt;203.0.113.0/32&lt;/code&gt;）&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;原因2-ufwuncomplicated-firewallがポート22を閉じていた&#34;&gt;&lt;strong&gt;原因2: UFW（Uncomplicated Firewall）がポート22を閉じていた&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;問題点&lt;/strong&gt;&lt;br&gt;&#xA;EC2インスタンス内のUFW（ローカルファイアウォール）でポート22が閉じられていた。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;解決方法&lt;/strong&gt;&lt;br&gt;&#xA;以下のコマンドを実行してポート22を許可し、設定を反映しました。&lt;/p&gt;&#xA;&lt;div class=&#34;codeblock-wrapper&#34;&gt;&#xA;    &#xA;    &lt;pre&gt;&#xA;        &lt;code id=&#34;codeblock-0&#34; class=&#34;language-bash&#34;&gt;sudo ufw allow 22&#xA;sudo ufw reload&lt;/code&gt;&#xA;    &lt;/pre&gt;&#xA;    &lt;button class=&#34;copy-btn&#34; onclick=&#34;copyToClipboard(&#39;codeblock-0&#39;)&#34;&gt;Copy&lt;/button&gt;&#xA;&#xA;    &lt;script&gt;&#xA;        function copyToClipboard(id) {&#xA;            const codeBlock = document.getElementById(id);&#xA;            if (!codeBlock) return;&#xA;&#xA;            const text = codeBlock.textContent.replace(/^\$\s/gm, &#34;&#34;);&#xA;            navigator.clipboard.writeText(text).then(() =&gt; {&#xA;                alert(&#34;Copied!&#34;);&#xA;            }).catch(err =&gt; {&#xA;                console.error(&#34;Failed to copy: &#34;, err);&#xA;            });&#xA;        }&#xA;    &lt;/script&gt;&#xA;&lt;/div&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;原因3-グローバルipの変動&#34;&gt;&lt;strong&gt;原因3: グローバルIPの変動&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;問題点&lt;/strong&gt;&lt;br&gt;&#xA;自分のグローバルIPアドレスが変更されたことで、セキュリティグループのルールが機能しなくなった。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
